#!/usr/bin/env ruby
require 'fileutils'
require 'erb'
require 'securerandom'

# Deployment name
puts "Enter the name of the new deployment."
puts "The deployment name can only contain letters and underscores, eg: 'test_environment'."
print "Deployment name: "
deployment_name = gets.chomp

if deployment_name.match?( /[^a-zA-Z_]/ )
  puts "The deployment name can only contain letters and underscores. Aborting..."
  abort
end

if File.exists?("hosts/#{deployment_name}")
  puts "Deployment name #{deployment_name} already exists. Aborting..."
  abort
end

# Domain
puts "Enter the domain or subdomain on which you'd like to host your Simple server instance"
puts "Eg. api.simple.org"
print "Domain/Subdomain: "
domain = gets.chomp

project_path = File.expand_path("..", File.dirname(__FILE__))
templates_path = File.expand_path("bin/templates", project_path)
hosts_path = File.expand_path("hosts", project_path)
group_vars_path = File.expand_path("group_vars/#{deployment_name}", project_path)

# Ansible inventory file
inventory_template = ERB.new(File.read("#{templates_path}/inventory.erb"))
inventory = inventory_template.result(binding)
File.write("#{hosts_path}/#{deployment_name}", inventory)

# Group vars directory
FileUtils.mkdir(group_vars_path)

# Vars
vars_template = ERB.new(File.read("#{templates_path}/vars.yml.erb"))
vars = vars_template.result(binding)
File.write("#{group_vars_path}/vars.yml", vars)

# Vault
secret_key_base = SecureRandom.hex(128)
vault_template = ERB.new(File.read("#{templates_path}/vault.yml.decrypted.erb"))
vault = vault_template.result(binding)
File.write("#{group_vars_path}/vault.yml.decrypted", vault)

# Ansible vault identity list
# Parse the ansible vault identity list
#    vault_identity_list = id@path, id@path
# into a list of vault identities and add a new identity to the end
ansible_config = File.readlines("#{project_path}/ansible.cfg")
vault_identity_index = ansible_config.index {|x| x.start_with?("vault_identity_list")}
vault_identity_list = ansible_config[vault_identity_index].split("=").last
vault_identities = vault_identity_list.split(",").map!(&:strip)
vault_identities.push("#{deployment_name}@~/.vault_password_#{deployment_name}")

ansible_config[vault_identity_index] = "vault_identity_list = #{vault_identities.join(", ")}"

File.write("#{project_path}/ansible.cfg", ansible_config.join)

# Next steps
puts
puts "#{deployment_name} deployment environment initialized!"
puts "To finish setup, follow these steps"
puts "- Enter your servers' IP addresses into the Ansible inventory file hosts/#{deployment_name}"
puts "- Configure your instance's variables in group_vars/#{deployment_name}/vars.yml"
puts "- Configure your instance's secrets in group_vars/#{deployment_name}/vault.yml.decrypted"
puts "- Create an Ansible vault password and place it in a file at ~/.vault_password_#{deployment_name}"
puts "- Create your vault file by running `make encrypt hosts=#{deployment_name}`"
puts
puts "And you're done! You can then deploy Simple onto your servers with `make all`"
