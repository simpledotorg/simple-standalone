# load balancing tasks
---
- name: add haproxy 2.6 repository
  apt_repository: repo='ppa:vbernat/haproxy-2.6' state=present update_cache=true
  become: true

- name: include monitoring variables (ports and secrets)
  include_vars:
    dir: ../../monitoring/vars/

- name: install HAProxy
  apt:
    pkg: "haproxy={{ haproxy_version }}"
  become: true

- name: enable init script
  replace:
    dest: '/etc/default/haproxy'
    regexp: 'ENABLED=0'
    replace: 'ENABLED=1'

- name: update HAProxy config
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    backup: yes
  become: true

- name: allow all tcp access to port 80
  ufw:
    rule: allow
    port: "{{ haproxy_frontend_http_port }}"
    proto: tcp
  become: true

- name: allow all tcp access to port 443
  ufw:
    rule: allow
    port: "{{ haproxy_frontend_https_port }}"
    proto: tcp
  become: true

- name: allow all tcp access to load balancer status page
  ufw:
    rule: allow
    port: "{{ haproxy_stats_port }}"
    proto: tcp
  become: true

- name: install certbot
  apt:
    name: certbot
    state: present
  become: true

- name: get the SSL certificate
  command:
    cmd: certbot certonly --standalone -d {{ domain_name }} --non-interactive --agree-tos --email {{ monitoring_email }}
    # Run only if the cert is not present in the first run
    # The renewal is done by the cron job
    creates: /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem
  become: true

- name: add http01_port to renewalparams section of the letsencrypt renewal config
  ansible.builtin.lineinfile:
    path: /etc/letsencrypt/renewal/{{ domain_name }}.conf
    insertafter: '^\[renewalparams\]$'
    line: 'http01_port = 54321'
    state: present

- name: create haproxy cert directory
  file:
    path: /etc/haproxy/certs
    state: directory
    mode: 0755
  become: true

- name: install ssl renew script
  template:
    src: ssl_renew.sh.j2
    dest: /usr/local/bin/ssl_renew.sh
    mode: 0755
  become: true

- name: run renewal script
  command:
    cmd: /usr/local/bin/ssl_renew.sh
    # Run only if the cert is not present in the first run
    # The renewal is done by the cron job
    creates: /etc/haproxy/certs/{{ domain_name }}.pem
  become: true

- name: create cron job for SSL renewal
  cron:
    name: "renew_ssl"
    job: "/usr/bin/certbot renew --renew-hook \"/usr/local/bin/ssl_renew.sh\" >> /var/log/le-renewal.log"
    minute: "30"
    hour: "2"
    user: root
  become: true

- name: restart haproxy
  service:
    name: haproxy
    state: restarted

- name: restart rsyslog to begin logging
  service:
    name: rsyslog
    state: restarted
  become: true
