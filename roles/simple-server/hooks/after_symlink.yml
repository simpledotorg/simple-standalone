# Ansistrano after symlink tasks
---
- name: Check if the shared bundler index file exists
  stat:
    path: "{{ ansistrano_shared_path }}/.bundle/plugin/index"
  register: shared_bundler_index

- name: Fix bundler path for bootboot
  command: sed -i "s#{{ ansistrano_releases_path }}/[0-9,Z]\+/#{{ ansistrano_shared_path }}/#g" {{ ansistrano_shared_path }}/.bundle/plugin/index
  when: shared_bundler_index.stat.exists

- name: Install required gems
  bundler:
    chdir: "{{ ansistrano_release_path.stdout }}"
    executable: "{{ bundle_path }}"
    deployment_mode: yes
    exclude_groups:
      - development
      - test

- name: precompile assets
  command: "{{ bundle_path }} exec rails assets:precompile"
  args:
    chdir: "{{ ansistrano_release_path.stdout }}"
  environment:
    RAILS_ENV: production

- name: check if schema has been loaded
  shell: |
    echo "\d+" | PGPASSWORD={{ database.password | quote }} psql -d {{ database_name | quote }} -U {{ database.username | quote }} | grep ar_internal_metadata
  register: schema_loaded
  ignore_errors: true
  run_once: true

- name: load schema
  when: schema_loaded.rc != 0
  command: "{{ bundle_path }} exec rails db:schema:load"
  run_once: true
  args:
    chdir: "{{ ansistrano_release_path.stdout }}"
  environment:
    RAILS_ENV: production

- name: migrate the db
  command: "{{ bundle_path }} exec rails db:migrate:with_data"
  run_once: true
  args:
    chdir: "{{ ansistrano_release_path.stdout }}"
  environment:
    RAILS_ENV: production

- name: update the crontab
  command: "{{ bundle_path }} exec whenever --update-crontab simple-server --set environment=production"
  run_once: true
  args:
    chdir: "{{ ansistrano_release_path.stdout }}"
